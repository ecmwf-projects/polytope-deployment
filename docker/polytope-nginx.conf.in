{% set staging_service = 'staging' %}
{% set staging_port = config['deployment']['minio']['port'] %}
{% if 'polytope_staging' in config['deployment'] %}
    {% if config['deployment']['polytope_staging']['replicas'] > 0 %}
        {% set staging_service = 'stagingtwo' %}
        {% set staging_port = config['deployment']['polytope_staging']['port'] %}
    {% endif %}
{% endif %}
{% if 'https' in config['deployment']['ingress'] %}
    {% set server_type = 'ssl' %}
{% else %}
    {% set server_type = 'default_server' %}
{% endif %}


server {
    {% if 'public_endpoint_dns_name' in config['deployment'] %}
        server_name {{ config['deployment']['public_endpoint_dns_name'] }};
    {% endif %}
    listen {{ config['deployment']['ingress']['port'] }} {{ server_type }};
    listen [::]:{{ config['deployment']['ingress']['port'] }} {{ server_type }};
    {% if 'https' in config['deployment']['ingress'] %}
        ssl_certificate /etc/nginx/polytope_cert_chain.pem;
        ssl_certificate_key /etc/nginx/polytope_private_key.pem;
    {% endif %}
    location = /_external-auth {
	resolver 127.0.0.11;
        internal;
        #set $proxy_upstream_name "polytope-dev-staging-9000";
        proxy_pass_request_body     off;
        proxy_set_header            Content-Length "";
        proxy_set_header            X-Forwarded-Proto "";
        proxy_set_header            Host                    frontend;
        proxy_set_header            X-Original-URL          $scheme://$http_host$request_uri;
        proxy_set_header            X-Original-Method       $request_method;
        proxy_set_header            X-Sent-From             "nginx-ingress-controller";
        proxy_set_header            X-Real-IP               $remote_addr;
        proxy_set_header            X-Forwarded-For        $remote_addr;
        proxy_set_header            X-Auth-Request-Redirect $request_uri;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_ssl_server_name       on;
        proxy_pass_request_headers  on;
        client_max_body_size        100m;
        set $target http://frontend:{{ config['frontend']['port'] }}/api/v1/test;
        proxy_pass $target;
    }
    location ~* "^/api/v1/downloads(/|$)(.*)" {
        resolver 127.0.0.11;
        auth_request        /_external-auth;
        auth_request_set    $auth_cookie $upstream_http_set_cookie;
        add_header          Set-Cookie $auth_cookie;
        auth_request_set $authHeader0 $upstream_http_authorization;
        proxy_set_header 'Authorization' $authHeader0;
        client_max_body_size 100m;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection $connection_upgrade;
        #proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $http_host;
        proxy_set_header X-Forwarded-Port       $server_port;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header X-Scheme               $scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        set $service {{ staging_service }}:{{ staging_port }};
        rewrite "(?i)/api/v1/downloads(/|$)(.*)" /$2 break;
        proxy_pass http://$service;
        {% if config['deployment']['ingress']['https_rewrite'] %}
            proxy_redirect              ~^http(.*) https$1;
        {% else %}
            proxy_redirect off;
        {% endif %}
    }
    location ~* "^/" {
        resolver 127.0.0.11;
        client_max_body_size 100m;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection $connection_upgrade;
        #proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $http_host;
        proxy_set_header X-Forwarded-Port       $server_port;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header X-Scheme               $scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        set $service frontend:{{ config['frontend']['port'] }};
        proxy_pass http://$service;
        {% if config['deployment']['ingress']['https_rewrite'] %}
            proxy_redirect              ~^http(.*) https$1;
        {% else %}
            proxy_redirect off;
        {% endif %}
    }
}
